/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//r0  -3; r1  -0.5;   r2  0.0; r3  0.5;    r4  3;
rc1  0.5; rc2   -0.5;
ro1  4.5; ro2 -4.5;
cc  0.0;

z0  0;  z1  0.1;
narc    20;
nrad    50; srad    15;
nz      1;


//arc mid-points
Rc1  0.353553391;
Rc2 -0.353553391;
Ro1  3.181980515;
Ro2 -3.181980515;


A1b  ($Rc1 $Rc1 $z0); A2b ($Rc2 $Rc1 $z0); A3b ($Rc2 $Rc2 $z0); A4b ($Rc1 $Rc2 $z0);
B1b  ($Ro1 $Ro1 $z0); B2b ($Ro2 $Ro1 $z0); B3b ($Ro2 $Ro2 $z0); B4b ($Ro1 $Ro2 $z0);
A1f  ($Rc1 $Rc1 $z1); A2f ($Rc2 $Rc1 $z1); A3f ($Rc2 $Rc2 $z1); A4f ($Rc1 $Rc2 $z1);
B1f  ($Ro1 $Ro1 $z1); B2f ($Ro2 $Ro1 $z1); B3f ($Ro2 $Ro2 $z1); B4f ($Ro1 $Ro2 $z1);


scale 1;

vertices
(
    ($rc1 $cc $z0)//0
    ($cc $rc1 $z0)//1
    ($rc2 $cc $z0)//2
    ($cc $rc2 $z0)//3
    //
    ($ro1 $cc $z0)//4
    ($cc $ro1 $z0)//5
    ($ro2 $cc $z0)//6
    ($cc $ro2 $z0)//7
    ////
    ($rc1 $cc $z1)//0
    ($cc $rc1 $z1)//1
    ($rc2 $cc $z1)//2
    ($cc $rc2 $z1)//3
    //
    ($ro1 $cc $z1)//4
    ($cc $ro1 $z1)//5
    ($ro2 $cc $z1)//6
    ($cc $ro2 $z1)//7

);

blocks
(
    hex ( 0  4  5  1  8 12 13  9) ($nrad $narc 1) simpleGrading ($srad 1 1) //Block 0 (+x/+y)
    hex ( 1  5  6  2  9 13 14 10) ($nrad $narc 1) simpleGrading ($srad 1 1) //Block 1 (-x/+y)
    hex ( 2  6  7  3 10 14 15 11) ($nrad $narc 1) simpleGrading ($srad 1 1) //Block 2 (-x/-y)
    hex ( 3  7  4  0 11 15 12  8) ($nrad $narc 1) simpleGrading ($srad 1 1) //Block 3 (+x/-y)
);

edges
(

    // inner cylinder
    arc 1 0 $A1b arc 9 8 $A1f //Block 0 (+x/+y)
    arc 2 1 $A2b arc 10 9 $A2f //Block 1 (-x/+y)
    arc 3 2 $A3b arc 11 10 $A3f //Block 2 (-x/-y)
    arc 0 3 $A4b arc 8 11 $A4f //Block 3 (+x/-y)
    ////
    // outer overset
    arc 4 5 $B1b arc 12 13 $B1f  //back: Block 0 (+x/+y)
    arc 5 6 $B2b arc 13 14 $B2f  //back: Block 1 (-x/+y)
    arc 6 7 $B3b arc 14 15 $B3f  //back: Block 2 (-x/-y)
    arc 7 4 $B4b arc 15 12 $B4f  //back: Block 3 (+x/-y)

);

boundary
(
    walls
    {
        type wall;
        faces
        (
          (0 1 8 9)
          (1 2 9 10)
          (2 3 10 11)
          (3 0 11 8)
        );
    }
    overSetPatch
    {
        type overset;
        faces
        (
          (4 5 12 13)
          (5 6 13 14)
          (6 7 14 15)
          (7 4 15 12)
        );
    }


    frontAndBack
    {
        type empty;
        faces
        (
            (0 4 5 1) (1 5 6 2) (2 6 7 3) (3 0 7 4)
            (9 8 12 13) (9 13 10 14) (10 14 11 15) (11 15 8 12)
        );
    }
);

// mergePatchPairs
// (
// );

// ************************************************************************* //
